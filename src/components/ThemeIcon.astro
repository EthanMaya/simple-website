---
// This is a client-only component
// It will hydrate on the client to handle dark mode interactivity
---
<div class="inline-flex items-center print:hidden">
  <div class="flex items-center gap-2 rounded-md bg-transparent">
    <button id="themeSwitch" class="cursor-pointer" aria-label="Toggle dark mode">
      <span class="icon-wrapper">
        <!-- Moon icon for dark mode -->
        <svg id="moonIcon" xmlns="http://www.w3.org/2000/svg" class="hidden" width="28" height="28" viewBox="0 0 24 24" fill="currentColor">
          <path d="M21 12.79A9 9 0 0111.21 3 7 7 0 0012 17a7 7 0 009-4.21z"/>
        </svg>
        <!-- Sun icon for light mode -->
        <svg id="sunIcon" xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12 4.5V2m0 20v-2.5m7.07-7.07h2.5M2.43 12h2.5m15.36 5.36l1.77 1.77M3.44 4.44l1.77 1.77M16.24 7.76l1.77-1.77M4.97 19.03l1.77-1.77M12 6a6 6 0 100 12 6 6 0 000-12z"/>
        </svg>
      </span>
    </button>
  </div>
</div>

<style>
  :root { --icon-color: #000; }
  :root.dark { --icon-color: #fff; }
  .icon-wrapper svg { fill: var(--icon-color); }
  .hidden { display: none; }
  .dark #sunIcon { display: none; }
  .dark #moonIcon { display: inline; }
</style>

<script type="module">
  import { onMount } from 'astro/client';

  onMount(() => {
    const themeSwitchButton = document.getElementById('themeSwitch');
    const moonIcon = document.getElementById('moonIcon');
    const sunIcon = document.getElementById('sunIcon');

    let isDark = document.documentElement.classList.contains('dark');

    function updateTheme() {
      document.documentElement.classList.toggle('dark', isDark);

      // Update icons
      if (isDark) {
        moonIcon.classList.remove('hidden');
        sunIcon.classList.add('hidden');
      } else {
        moonIcon.classList.add('hidden');
        sunIcon.classList.remove('hidden');
      }

      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    }

    function toggleDark() {
      isDark = !isDark;
      updateTheme();
    }

    function initDarkMode() {
      if (
        localStorage.theme === 'dark' ||
        (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        isDark = true;
      } else {
        isDark = false;
      }
      updateTheme();
    }

    // Initialize on first load
    initDarkMode();

    // Add click listener
    if (themeSwitchButton) {
      themeSwitchButton.addEventListener('click', toggleDark);
    }

    // Re-run on Astro client-side navigation
    window.addEventListener('astro:route', initDarkMode);

    // Listen for system dark mode changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
      if (!('theme' in localStorage)) {
        isDark = e.matches;
        updateTheme();
      }
    });
  });
</script>
